@page "/admin/stats"
@using System.Text.Json;
@using LamaApp.Client.Pages.Admin.Layout
@using LamaApp.Shared
@using LamaApp.Client.Services.Capitulos
@using LamaApp.Client.Services.Admin
@using LamaApp.Client.Services.Usuario;
@layout AdminLayout

@inject HttpClient httpClient
@inject IJSRuntime JS
@inject ICapituloService capituloService
@inject IAdminService adminloService


<div class="flex-grow-1 p-4">
    <h2 class="h2 mb-4">Estadisticas</h2>

    <div class="row">
        @* datos relevantes *@
        <div class="col-md-3 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Total Miembros</h5>
                    <p class="card-text display-4">@estadisticas.TotalUsuarios</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Total Capítulos</h5>
                    <p class="card-text display-4">@estadisticas.TotalCapitulos</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Total Eventos</h5>
                    <p class="card-text display-4">@estadisticas.TotalEventos</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Eventos Este Mes</h5>
                    <p class="card-text display-4">@estadisticas.EventosEsteMes</p>
                </div>
            </div>
        </div>

       @* Graficas o maximos *@
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Capítulos con Más Eventos</h5>
                    <div id="chaptersEventsChart" style="height: 300px;">

                        @* Grafica *@
                        <canvas id="myChart"></canvas>

                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Capítulos con Más Miembros</h5>
                    <div id="chaptersMembersChart" style="height: 300px;">

                        @* Grafica *@
                            <canvas id="myChart2"></canvas>
                    </div>
                </div>
            </div>
        </div>
        
        @* Actividad reciente o  datos importantes *@
        <div class="col-md-12 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Proximos eventos</h5>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Fecha</th>
                                <th>Capitulo</th>
                                <th>Descripcion</th>
                                <th>Creador</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var activity in recentActivities)
                            {
                                <tr>
                                    <td>@activity.fecha.ToString("dd/MM/yyyy")</td>
                                    <td>@activity.capitulo</td>
                                    <td>@activity.descripcion</td>
                                    <td>@activity.creador</td> 
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


@code {

    private Estadisticas estadisticas = new Estadisticas();
    private List<RecentActivity> recentActivities = new List<RecentActivity>();

    protected override async Task OnInitializedAsync()
    {
        try
        {

            estadisticas = await adminloService.getStats();


            var usuariosPorCapitulo = estadisticas.usuariosPorCapitulo;
            var nombresCapitulosUsuarios = new List<string>();
            var totalesUsuarios = new List<int>();

            //Separamos los datos en nombre de capitulo y total usuarios
            foreach (var item in usuariosPorCapitulo)
            {
                var partes = item.Split(','); 
                nombresCapitulosUsuarios.Add(partes[0]);
                totalesUsuarios.Add(int.Parse(partes[1])); 
            }

            //Segunda grafica
            await JS.InvokeVoidAsync("Graficar", "myChart2", totalesUsuarios.ToArray(), nombresCapitulosUsuarios.ToArray());

            // Separamos los datos en nombre de capitulo y total eventos
            var eventosPorCapitulo = estadisticas.eventosPorCapitulo;
            var nombresCapitulosEventos = new List<string>();
            var totalesEventos = new List<int>();

            foreach (var item in eventosPorCapitulo)
            {
                var partes = item.Split(',');
                nombresCapitulosEventos.Add(partes[0]); 
                totalesEventos.Add(int.Parse(partes[1])); 
            }

            //Primera grafica
            await JS.InvokeVoidAsync("Graficar", "myChart", totalesEventos.ToArray(), nombresCapitulosEventos.ToArray());



            // Procesar `ActividadReciente` para llenar `recentActivities`
            recentActivities = estadisticas.ActividadReciente
                        .Select(activity =>
             {
                 var parts = activity.Split(';');
                 return new RecentActivity
                     {
                         fecha = DateTime.Parse(parts[0].Trim()),
                         descripcion = parts[1].Trim(),
                         capitulo = parts[2].Trim(),
                         creador = parts[3].Trim() 
                     };
             })
             .ToList();


            Console.WriteLine("Actividades Recientes:");
            foreach (var activity in recentActivities)
            {
                Console.WriteLine($"Fecha: {activity.fecha}, Capítulo: {activity.capitulo}, Descripción: {activity.descripcion}, Creador: {activity.creador}");
            }
     
        
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al obtener capítulos: {ex.Message}");
        }
    }

    private class RecentActivity
    {
        public DateTime fecha { get; set; }
        public string descripcion { get; set; }
        public string capitulo { get; set; }
        public string creador { get; set; }
    }
}

