@page "/login"
@using LamaApp.Client.Pages.Layout;
@using LamaApp.Shared;
@using Microsoft.AspNetCore.Components.Forms;
@using LamaApp.Client.Services.Usuario

@inject IUsuarioService usuarioService
@inject NavigationManager Navigation
@inject IJSRuntime js
@inject HttpClient Http
@layout MainLayout

<main class="container vh-100">
    <div class="row mt-3">
        <div class="col offset-10">
            <button class="btn btn-outline-dark" onclick="window.location.href = '/register'">Register</button>
            <button class="btn btn-outline-danger" onclick="window.location.href = '/'"><i class="fa-solid fa-house"></i></button>
        </div>
    </div>

    @if (formSubmitted)
    {
        <div class="alert alert-success my-3" role="alert">
            @($"El usuario {user.NombreUsuario} ha ingresado éxito.")
        </div>
    }
    @if (formError)
    {
        <div class="alert alert-danger my-3" role="alert">
            @(mensajeError)
        </div>
    }

    <div class="row h-75 d-flex flex-column justify-content-center">

        <div class=" target col-6 offset-3 border shadow-sm rounded-3 d-flex flex-column p-4 gap-3">
            <h2 class="text-center py-2">Login</h2>

            <EditForm FormName="formLogin" Model="@user" OnValidSubmit="HandleFormSubmit" id="form-login" class=" d-flex flex-column gap-5 justify-content-around">
                <div class="d-flex flex-column gap-4">
                    <InputText type="text" id="user" placeholder="User" class="w-100 form-control" @bind-Value="user.NombreUsuario" />
                    <InputText type="password" id="password" placeholder="Password" class="w-100 form-control" @bind-Value="user.Contraseña" />
                    <p>Forgot your password? <a href="#">reset it</a></p>
                </div>

                <button type="submit" id="btn-login" class="btn btn-dark">Send</button>
            </EditForm>

        </div>
    </div>

</main>

<script>
    function guardarUsuarioEnLocalStorage(nombreUsuario) {
         localStorage.removeItem('nombreUsuario');

        localStorage.setItem("nombreUsuario", nombreUsuario);
    }
</script>


@code {
    [SupplyParameterFromForm(FormName = "formLogin")]
    public UsuarioSh user { get; set; } = new UsuarioSh();

    private bool formSubmitted = false;
    private bool formError = false;
    public string mensajeError = string.Empty;

    private async Task HandleFormSubmit()
    {
        try
        {
            if (user.NombreUsuario == "admin" && user.Contraseña == "admin")
            {
                await js.InvokeVoidAsync("guardarUsuarioEnLocalStorage", user.NombreUsuario);
                Navigation.NavigateTo("/admin/stats");
            }
            else
            {
                var response = await usuarioService.LoginVerif(user.NombreUsuario, user.Contraseña);

                if (response.statusCode == 200)
                {
                    await js.InvokeVoidAsync("guardarUsuarioEnLocalStorage", user.NombreUsuario);

                    // Login exitoso
                    Navigation.NavigateTo("/user");

                }
                else
                {
                    formError = true;
                    mensajeError = response.mensaje;
                    Console.WriteLine(response.mensaje);
                }
            }
            
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error en el login: " + ex.Message);
        }
    }

}
